<?xml version="1.0" encoding="utf-8"?>
<!-- iyuncai.com uploader -->
<s:Application
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:s="library://ns.adobe.com/flex/spark"

    click="clickHandler(event)"
    applicationComplete="applicationCompleteHandler()"
    backgroundAlpha="0">
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>
    <!-- Coding here -->
	<fx:Script>
	<![CDATA[
        import mx.controls.Image;
        import mx.graphics.ImageSnapshot;
        import mx.events.FlexEvent;

        private var infoText:String;
        private var fileFilterDescription:String;
        private var fileFilterExtension:String;
        private var uploadUrl:String;
        private var onUpload:String;

        private var fileRef:FileReference;
        private var allFilter:FileFilter = new FileFilter("All", "*");
        private var snap:ImageSnapshot;
        private var _snap:Boolean = false;
        private var imageData:BitmapData = new BitmapData(200, 200);

        private function onFile(e:Event):void {
            fileRef.load();
        }
        private function onLoadComplete(e:Event):void {
            image.source = fileRef.data;
            imageData = new BitmapData(20, 20);
            var shiftOrigin:Matrix = new Matrix();
            shiftOrigin.translate(0, 0);
            imageData.draw(image, shiftOrigin);
        }
        private function onImage(e:Event):void {
            trace(image.width + 'x' + image.height)
            image.width = width;
            image.height = height;
            snap = ImageSnapshot.captureImage(image);
        }
        private function onUploadProgress(e:ProgressEvent):void {
            var percent:Number = Math.round(e.bytesLoaded*100/e.bytesTotal);
        }
        private function onUploadComplete(e:Event):void {
        }
        private function onResponse(e:DataEvent):void {
            var result:XML = new XML(e.data);
            var response:String = result.toString();
            if (onUpload && ExternalInterface.available) {
                ExternalInterface.call(onUpload, response);
            }
        }
        private function onError(e:IOErrorEvent):void {
            trace(e);
        }
        private function browseFile():void {
            fileRef = new FileReference();

            fileRef.addEventListener(Event.SELECT, onFile);
            fileRef.addEventListener(ProgressEvent.PROGRESS, onUploadProgress);
            fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onResponse);
            //fileRef.addEventListener(Event.COMPLETE, onUploadComplete);
            fileRef.addEventListener(Event.COMPLETE, onLoadComplete);

            fileRef.addEventListener(IOErrorEvent.IO_ERROR, onError);

            if (fileFilterDescription && fileFilterExtension) {
                var fileFilter:FileFilter = new FileFilter(fileFilterDescription, fileFilterExtension);
                fileRef.browse([fileFilter, allFilter]);
            }else{
                fileRef.browse([allFilter]);
            }
        }

        private function clickHandler(e:MouseEvent):void {
            if (!snap) {
                browseFile();
            }else{
                var tmp:FileReference = new FileReference();
                tmp.save(snap.data, 'flex-resized.png');
            }
        }

        public function applicationCompleteHandler():void {
            fileFilterDescription = parameters.filterDesc;
            fileFilterExtension = parameters.filterExt;
            uploadUrl = parameters.uploadUrl;
            onUpload = parameters.onUpload;

            image.addEventListener(Event.COMPLETE, onImage);
        }
	]]>
	</fx:Script>

    <s:SkinnableContainer width="100%" height="100%" skinClass="RoundedCornerSkin">
        <s:Group width="100%" height="100%" verticalCenter="0" horizontalCenter="0">
            <s:Image id="image" />
        </s:Group>
    </s:SkinnableContainer>
</s:Application>
